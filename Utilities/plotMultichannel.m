function [h,ploth] = plotMultichannel(x,y,options)
% PLOTMULTICHANNEL Simple script to plot a multichannel figure in a single
% plot.
% 
%     [h,ploth] = plotMultichannel(x,y);
%     Arguments:
%     x is a (n x 1) array of data to plot along the x axis of the figure
%     y is a (n x d) array of data to plot d channels of lineplots along 
%     the y axis of the figure
% 
%     Output:
%     h         - the handle for the figure generated by the function
%     ploth     - a cell array for the handles for the plots generated by 
%                 the function
% 
%     [h,ploth] = plotMultichannel(... , options) specifies other 
%     parameters for the figure. Parameters are:
%     'ranges'      - a (d x 2) array indicating the range for each data 
%                     channel. If uniform, give a (1 x 2) array.
%                     Default is [0 1]
%     'ylabels'     - a (d x 1) cell array for the labels of the different
%     channels of data. Default will generate generic CH01, CH02, etc.
%     'fontsize'    - the fontsize of the figure axes. (Default is 15)
%     'linewidth'   - the linewidth of the figure axes. (Default is 1.5)
%     'plothandle'  - (optional) the plothandle for the figure you want to reuse.
% 
%     Example:
%         x = linspace(0,1,100)';
%         y = 2.5*rand(100,4);
%         labels = [{'Sigma'} {'Rand_2'} {'Rdy'} {'Temp'}];
%         [p,h] = plotMultichannel(x,y,'ranges',[0 2.5],'ylabels',labels);
% 
%     This function is loosely based on the <a href="https://github.com/Hio-Been/plot_multichan">plot_multichan function</a> from
%     Hio-Been Han.
% 
arguments
    x                   {mustBeNumeric,mustBeNonNan}
    y                   {mustBeNumeric,mustBeNonNan}
    options.ranges      {mustBeNumeric,mustBeNonNan}=[0 1]
    options.ylabels     {mustBeText}={}
    options.fontsize    {mustBeNumeric,mustBeNonNan,mustBeNonnegative}=15
    options.linewidth   {mustBeNumeric,mustBeNonNan,mustBeNonnegative}=1.5
    options.color       {mustBeNumeric,mustBeNonNan,mustBeNonnegative}=[0.1 0.1 0.1]
    options.plothandle  =[]
end
if(length(x)~=length(y))
    error('Please make sure the data length for x and y are equal.');
end
nChannels = min(size(y));
if(nChannels < 2)
    error('Only one dimension of data is inputted. Please use default plot functionality instead.');
end
if(size(options.ranges,2)~=2)
    error('Please double check ranges option. Should be a d x 2 array or 1 x 2 array.');
end
if(size(options.ranges,1)>1)
    % check if same size as number of data
    if(length(options.ranges)~=nChannels)
        error('Incorrect number of rows as data channels.');
    end
end
if(isempty(options.ylabels))
    options.ylabels = cell(nChannels,1);
    for i=1:nChannels
        options.ylabels{i} = ['CH' num2str(floor(i/10)) num2str(mod(i,10))];
    end
else
    % check if ylabel is the same length for nChannels
    if(length(options.ylabels)~=nChannels)
        error('ylabels entered is not the same length as the number of channels from the data');
    end
end

if(size(options.ranges,1)~=1)
    y_ticks = zeros(length(options.ranges),1); y_tickfig = y_ticks;
    y_ticks(1) = 1.1*range(options.ranges(i,:));
    y_tickfig(1) = 0.5*range(options.ranges(i,:));
    for i=2:length(options.ranges)
        y_ticks(i) = 1.1*range(options.ranges(i,:))+y_ticks(i-1);
        y_tickfig(i) = 0.55*range(options.ranges(i,:))+y_tickfig(i-1);
    end
    yaxis = [y_ticks(1)-1.1*y_ticks(1) y_ticks(end)+0.1*range(y_ticks(end,:))];
    y_ticks = y_ticks - 1.1*range(options.ranges(i,:));
    y_tickfig = y_ticks+mean(options.ranges);
else
    y_ticks = 1.1*range(options.ranges):1.1*range(options.ranges):1.1*range(options.ranges)*nChannels;
    yaxis = [y_ticks(1)-1.2*range(options.ranges) y_ticks(end)+0.1*range(options.ranges)];
    y_ticks = y_ticks - 1.1*range(options.ranges);
    y_tickfig = y_ticks+mean(options.ranges);    
end
xaxis = [x(1) x(end)+0.01*range(x)];

c_space = options.color;

if(isempty(options.plothandle))
    h = figure;
else
    h = options.plothandle;
end
hold on; ploth = cell(nChannels,1);
ploth{1} = plot(x,y(:,1)+y_ticks(1),'Color',c_space,'LineWidth',options.linewidth);
for i=2:nChannels
    ploth{i} = plot(x,y(:,i)+y_ticks(i),'Color',c_space,'LineWidth',options.linewidth,'HandleVisibility','off');
end
hold off;

set(gca,'YTick', y_tickfig,'Clipping','on', 'Box','off', ...
    'LineWidth',options.linewidth,'xlim',xaxis, 'ylim', yaxis, ...
    'FontSize',options.fontsize,'FontWeight','bold');
set(gca,'YTickLabel',options.ylabels);
end